{"remainingRequest":"C:\\Users\\USER\\Desktop\\Office\\Working\\VueJS\\ninja-smoothies\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\Office\\Working\\VueJS\\ninja-smoothies\\src\\components\\Index.vue?vue&type=style&index=0&id=82b7485c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\Office\\Working\\VueJS\\ninja-smoothies\\src\\components\\Index.vue","mtime":1580444318062},{"path":"C:\\Users\\USER\\Desktop\\Office\\Working\\VueJS\\ninja-smoothies\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\Office\\Working\\VueJS\\ninja-smoothies\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\Office\\Working\\VueJS\\ninja-smoothies\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\Office\\Working\\VueJS\\ninja-smoothies\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\Office\\Working\\VueJS\\ninja-smoothies\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouaW5kZXggew0KICBkaXNwbGF5OiBncmlkOw0KICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyOw0KICBncmlkLWdhcDogMzBweDsNCiAgbWFyZ2luLXRvcDogNjBweDsNCn0NCi5pbmRleCBoMiB7DQogIGZvbnQtc2l6ZTogMS44ZW07DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgbWFyZ2luLXRvcDogMDsNCn0NCi5pbmRleCAuaW5ncmVkaWVudHMgew0KICBtYXJnaW46IDMwcHggYXV0bzsNCiAgLyogcGFkZGluZzogMTBweDsgKi8NCn0NCi5pbmRleCAuaW5ncmVkaWVudHMgbGkgew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQp9DQouZGVsZXRlIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICB0b3A6IDRweDsNCiAgcmlnaHQ6IDRweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBjb2xvcjogI2FhYTsNCiAgZm9udC1zaXplOiAxLjRlbTsNCn0NCg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components","sourcesContent":["<!--<template>-->\r\n<!--    <div class=\"index container\">-->\r\n<!--        <div class=\"card\" v-for=\"smoothie in smoothies\" :key=\"smoothie.id\">-->\r\n<!--            <div class=\"card-content\">-->\r\n<!--                <i class=\"material-icons delete\" @click=\"deleteSmoothie(smoothie.id)\">delete</i>-->\r\n<!--                <h2 class=\"indigo-text\">{{smoothie.title}}</h2>-->\r\n<!--                <ul class=\"ingredients\">-->\r\n<!--                    <li v-for=\"(ing,index) in  smoothie.ingredients\" :key=\"index\">-->\r\n<!--                        <span class=\"chip\"> {{ing}}</span>-->\r\n<!--                    </li>-->\r\n<!--                </ul>-->\r\n<!--            </div>-->\r\n<!--        </div>-->\r\n<!--    </div>-->\r\n<!--</template>-->\r\n\r\n\r\n<!--<script>-->\r\n<!--    import db from '@/firebase/init'-->\r\n\r\n<!--    export default {-->\r\n<!--        name: 'Index',-->\r\n\r\n<!--        data() {-->\r\n<!--            return {-->\r\n<!--                smoothies: [],-->\r\n<!--                // smoothie_config: {-->\r\n<!--                //     firebase_bd_name: 'smoothies'-->\r\n<!--                // },-->\r\n<!--            }-->\r\n<!--        },// data-->\r\n\r\n<!--        methods: {-->\r\n\r\n<!--            /*delete objects from smoothies*/-->\r\n<!--            deleteSmoothie(id) {-->\r\n<!--                db.collection('smoothies').doc(id).delete().then(() => {-->\r\n<!--                    this.smoothies = this.smoothies.filter(smoothie => {-->\r\n<!--                        return smoothie.id !== id-->\r\n<!--                    })// filter-->\r\n<!--                })// delete-->\r\n<!--            }, // deleteSmoothie-->\r\n\r\n<!--            /*push firebase data to the smoothies array*/-->\r\n<!--            fetchData() {-->\r\n<!--                db.collection('smoothies').get().then(snapshot => {-->\r\n<!--                    snapshot.forEach(doc => {-->\r\n<!--                        let smoothie = doc.data();-->\r\n<!--                        smoothie.id = doc.id;-->\r\n<!--                        this.smoothies.push(smoothie)-->\r\n<!--                    }) //forEach-->\r\n<!--                })// then-->\r\n<!--            },// fetchData-->\r\n\r\n<!--        },// method-->\r\n\r\n<!--        created() {-->\r\n<!--            this.fetchData()-->\r\n\r\n<!--        },// created-->\r\n<!--    }-->\r\n<!--</script>-->\r\n\r\n\r\n<!--<style>-->\r\n<!--    .index {-->\r\n<!--        display: grid;-->\r\n<!--        grid-template-columns: 1fr 1fr 1fr;-->\r\n<!--        grid-gap: 30px;-->\r\n<!--        margin-top: 60px;-->\r\n<!--    }-->\r\n\r\n<!--    .index h2 {-->\r\n<!--        font-size: 1.8em;-->\r\n<!--        text-align: center;-->\r\n<!--        margin-top: 0;-->\r\n<!--    }-->\r\n\r\n<!--    .index .ingredients li {-->\r\n<!--        display: inline-block;-->\r\n<!--    }-->\r\n\r\n<!--    .index .delete {-->\r\n<!--        position: absolute;-->\r\n<!--        top: 4px;-->\r\n<!--        right: 4px;-->\r\n<!--        cursor: pointer;-->\r\n<!--        color: #aaa;-->\r\n<!--        font-size: 1.4em;-->\r\n<!--    }-->\r\n\r\n<!--</style>-->\r\n\r\n\r\n\r\n<template>\r\n  <div class=\"index container\">\r\n      <div class=\"card\" v-for=\"(smoothie, number) in smoothies\" :key=\"smoothie.id\">\r\n        <div class=\"card-content\">\r\n          <i class=\"material-icons delete\" @click=\"deleteSmoothie(smoothie.id)\">delete</i>\r\n          <h2 class=\"indigo-text\">{{number+1}}) {{smoothie.title}}</h2>\r\n          <ul class=\"ingredients\">\r\n            <li v-for=\"(ingredient, index) in smoothie.ingredients\" :key=\"index\">\r\n              <span class=\"chip\">{{ ingredient }}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport db from '../../firebase/init'\r\n\r\nexport default {\r\n  name: 'Index',\r\n  data(){\r\n    return {\r\n      smoothies:[],\r\n      smoothies_collection: 'smoothies'\r\n    }\r\n  },\r\n  methods: {\r\n    deleteSmoothie(id){\r\n      //delte data from firestore\r\n      db.collection(this.smoothies_collection).doc(id).delete()\r\n      .then(() => {\r\n        this.smoothies = []\r\n        this.fetch_data()\r\n        this.delete_confirm()\r\n      })\r\n    },\r\n    //end delte function\r\n    delete_confirm(id){\r\n      const found = this.smoothies.some(elm => elm.id === id)\r\n      if(!found){ alert('Data Deleted Successfully..!!!')}\r\n      else{ alert('Oppss..!!! Data Not Deleted Successfully...!!!')}\r\n    },\r\n    fetch_data(){\r\n        db.collection(this.smoothies_collection).get()\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            let smoothie = doc.data();\r\n            smoothie.id = doc.id;\r\n            this.smoothies.push(smoothie)\r\n          })\r\n        })\r\n    }\r\n    // fetch data function end\r\n  },\r\n  created(){\r\n    this.fetch_data() // get data from firestore\r\n\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.index {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 30px;\r\n  margin-top: 60px;\r\n}\r\n.index h2 {\r\n  font-size: 1.8em;\r\n  text-align: center;\r\n  margin-top: 0;\r\n}\r\n.index .ingredients {\r\n  margin: 30px auto;\r\n  /* padding: 10px; */\r\n}\r\n.index .ingredients li {\r\n  display: inline-block;\r\n}\r\n.delete {\r\n  position: absolute;\r\n  top: 4px;\r\n  right: 4px;\r\n  cursor: pointer;\r\n  color: #aaa;\r\n  font-size: 1.4em;\r\n}\r\n</style>\r\n"]}]}